model:
  base_learning_rate: 5.0e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    use_ema: False
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image"
    cond_stage_key: "txt"
    image_size: 64
    channels: 4
    cond_stage_trainable: False   # Note: different from the one we trained before
    conditioning_key: crossattn
    scale_factor: 0.18215

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 1 ] # NOTE for resuming. use 10000 if starting from scratch
        cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: True
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder


data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 4
    num_workers: 12
    num_val_workers: 0 # Avoid a weird val dataloader issue
    train:
      target: ldm.data.simple.Text2Material
      params:
        data_dir: /home/d5/hz/DataSet/mat
        mode: train
        image_transforms:
        - target: torchvision.transforms.Resize
          params:
            size: 512
            # interpolation: 3
        # - target: torchvision.transforms.RandomCrop
        #   params:
        #     size: 512
        # - target: torchvision.transforms.RandomResizedCrop
        #   params:
        #     size: 512
        #     scale: [0.25, 1.0]
        - target: torchvision.transforms.RandomVerticalFlip
        - target: torchvision.transforms.RandomHorizontalFlip
    validation:
      target: ldm.data.simple.Text2Material
      params:
        data_dir: /home/d5/hz/DataSet/mat
        mode: test
        image_transforms:
        - target: torchvision.transforms.Resize
          params:
            size: 512
            # interpolation: 3


lightning:
  find_unused_parameters: False

  modelcheckpoint:
    params:
      every_n_train_steps: 3000
      save_top_k: 3
      monitor: train/loss_epoch

  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 3
        max_images: 4
        increase_log_steps: False
        log_first_step: True
        log_all_val: True
        log_on_batch_idx: True
        log_images_kwargs:
          use_ema_scope: True
          inpaint: False
          plot_progressive_rows: False
          plot_diffusion_rows: False
          ddim_steps: 25
          N: 4
          unconditional_guidance_scale: 3.0
          unconditional_guidance_label: [""]

  trainer:
    benchmark: True
    num_sanity_val_steps: 0
    accumulate_grad_batches: 1